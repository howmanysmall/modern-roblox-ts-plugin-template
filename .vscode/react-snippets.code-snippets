{
	"Functional Component": {
		"prefix": "rofc",
		"description": "Create a Functional Component",
		"body": [
			"//!nonstrict",
			"//!optimize 2",
			"",
			"import React from \"@rbxts/react\";",
			"",
			"export function ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}NoMemo({ children }: React.PropsWithChildren): React.Element {",
			"\treturn <></>;",
			"}",
			"",
			"export const ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} = React.memo(${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}NoMemo);",
			"${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}.displayName = \"${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}\";",
			"export default ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g};",
			"",
		],

		"scope": "typescriptreact",
	},

	"Functional Component with Props": {
		"prefix": "rofcp",
		"description": "Create a Functional Component with Props",
		"body": [
			"//!nonstrict",
			"//!optimize 2",
			"",
			"import React from \"@rbxts/react\";",
			"",
			"export interface ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}Properties extends React.PropsWithChildren {}",
			"",
			"export function ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}NoMemo(properties: ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}Properties): React.Element {",
			"\treturn <></>;",
			"}",
			"",
			"export const ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} = React.memo(${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}NoMemo);",
			"${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}.displayName = \"${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}\";",
			"export default ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g};",
			"",
		],

		"scope": "typescriptreact",
	},

	"Functional Component with forwardRef / Props": {
		"prefix": "rofcfp",
		"description": "Create a Functional Component with forwarding reference and props",
		"body": [
			"//!nonstrict",
			"//!optimize 2",
			"",
			"import React from \"@rbxts/react\";",
			"",
			"export interface ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}Properties extends React.PropsWithChildren {",
			"\treadonly ref?: React.Ref<${2:Instance}>,",
			"}",
			"",
			"function ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}ForwardReference(properties: ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}Properties, reference: React.Ref<$2>): React.Element {",
			"\treturn <></>;",
			"}",
			"",
			"export const ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}NoMemo = React.forwardRef(${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}ForwardReference);",
			"${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}NoMemo.displayName = \"${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}NoMemo\";",
			"",
			"export const ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} = React.memo(${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}NoMemo);",
			"${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}.displayName = \"${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}\";",
			"export default ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g};",
			"",
		],

		"scope": "typescriptreact",
    },

	"Input Function": {
		"body": "const onInput${1:Began} = useCallback((rbx: ${2:GuiObject}, inputObject: InputObject) => {$3}, []);",
		"description": "Creates an onInput useCallback.",
		"prefix": "onInput",
		"scope": "typescriptreact",
    },
}